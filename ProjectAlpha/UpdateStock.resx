<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        kAAAAABJRU5ErkJggg==
</value>
  </data>
</root>